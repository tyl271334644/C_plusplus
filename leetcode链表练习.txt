删除链表中等于给定值 val 的所有节点。

示例:

输入: 1->2->6->3->4->5->6, val = 6
输出: 1->2->3->4->5

class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
     while(head!=NULL && head->val==val)
    {
        head=head->next;
    }
    if(head==NULL)
    {
        return head;
    }
    ListNode* temp=head;
    while(temp->next != NULL)
    {
        if(temp->next->val!=val)
        {
            temp=temp->next;
        }
        else
        {
            temp->next=temp->next->next;
        }
    }
    return head;
    }
};

反转一个单链表。

示例:

输入: 1->2->3->4->5->NULL
输出: 5->4->3->2->1->NULL

struct ListNode *reverseList(struct ListNode* head) {
	struct ListNode *newHead = NULL;
	struct ListNode *node;
	while (head != NULL) {
		//1. 对之前的链表做头删
		node = head;
		head = head->next;
		
		//2. 对新链表做头插
		node->next = newHead;
		newHead = node;
	}
	return newHead;
}

